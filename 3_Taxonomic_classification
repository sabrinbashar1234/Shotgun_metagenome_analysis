##The cleaned fastq file after Trimmomatic, bbduk and host contamination checking were used in metaphlan. Only the clean pair end reads were used.
#here is the code for first 500 SRR folder


#!/bin/bash
#SBATCH --job-name=metaphlan_array
#SBATCH --array=1-500
#SBATCH --cpus-per-task=8
#SBATCH --mem=32G
#SBATCH --time=4:00:00
#SBATCH --output=/scratch/sbashar/log_metaphlan/metaphlan_%A_%a.out
#SBATCH --error=/scratch/sbashar/log_metaphlan/metaphlan_%A_%a.err

# Load Bowtie2 module
module load bowtie2/2.5.4

# Set MetaPhlAn path
METAPHLAN_BIN="/home/sbashar/.local/bin/metaphlan"

# Define directories
DATA_DIR="/scratch/sbashar/Host_contamination_final"
OUTPUT_DIR="/scratch/sbashar/metaphlan_output"
LOG_DIR="/scratch/sbashar/log_metaphlan"

# Create output and log directories if they don't exist
mkdir -p ${OUTPUT_DIR} ${LOG_DIR}

# Get list of first 500 samples
SAMPLES=($(ls -d ${DATA_DIR}/SRR* | sort | head -n 500))
SAMPLE_DIR=${SAMPLES[$SLURM_ARRAY_TASK_ID-1]}

# Define input files
FWD_READ=$(ls ${SAMPLE_DIR}/*_1.paired_clean.fq.gz 2>/dev/null)
REV_READ=$(ls ${SAMPLE_DIR}/*_2.paired_clean.fq.gz 2>/dev/null)

# Check if input files exist
if [[ ! -f "$FWD_READ" || ! -f "$REV_READ" ]]; then
  echo "Error: Input files not found in ${SAMPLE_DIR}" >&2
  exit 1
fi

# Define output file paths
SAMPLE_NAME=$(basename ${SAMPLE_DIR})
OUT_FILE="${OUTPUT_DIR}/${SAMPLE_NAME}_metaphlan.txt"
BT2_OUT="${OUTPUT_DIR}/${SAMPLE_NAME}_bowtie2.bz2"

# Run MetaPhlAn using the absolute path
${METAPHLAN_BIN} ${FWD_READ},${REV_READ} \
  --input_type fastq \
  --bowtie2out ${BT2_OUT} \
  --nproc 8 \
  -o ${OUT_FILE}


##merge SRR*_metaphlan.txt files from metaphlan_output

#!/bin/bash
#SBATCH --job-name=merge_metaphlan_recent
#SBATCH --output=merge_metaphlan_recent.out
#SBATCH --error=merge_metaphlan_recent.err
#SBATCH --time=24:00:00
#SBATCH --mem=16G
#SBATCH --cpus-per-task=1

# Load your python environment if needed
module load python

# Move to the directory with the MetaPhlAn outputs
cd /home/account-name/scratch/metaphlan_output

# Merge all *_metaphlan.txt files
python /home/account-name/.local/lib/python3.11/site-packages/metaphlan/utils/merge_metaphlan_tables.py *_metaphlan.txt > merged_taxa_abundance_table.txt

###as the output files column name contain the word SRR*_metaphlan, I removed the suffix '_metaphlan'

python
import pandas as pd
df = pd.read_csv('merged_abundance_table.txt', sep='\t')
df.rename(columns=lambda x: x.replace('_metaphlan', ''), inplace=True)
df.to_csv('merged_abundance_table_cleaned.txt', sep='\t', index=False)
exit()

###Generating seperate files at different taxonomic levels such as phylum, family, genus, species and strain

#I named the script as 'split_metaphlan_levels.sh'

cd /home/sbashar/scratch

# Strain (lines containing "t__")
awk -F'\t' 'NR==1 || $1 ~ /t__/' merged_abundance_table_cleaned.tsv > merged_strain.tsv

# Species (lines with "s__" but no "t__")
awk -F'\t' 'NR==1 || ($1 ~ /s__/ && $1 !~ /t__/)' merged_abundance_table_cleaned.tsv > merged_species.tsv

# Genus (lines with "g__" but no "s__" or "t__")
awk -F'\t' 'NR==1 || ($1 ~ /g__/ && $1 !~ /s__/ && $1 !~ /t__/)' merged_abundance_table_cleaned.tsv > merged_genus.tsv

# Family (lines with "f__" but no "g__", "s__", or "t__")
awk -F'\t' 'NR==1 || ($1 ~ /f__/ && $1 !~ /g__/ && $1 !~ /s__/ && $1 !~ /t__/)' merged_abundance_table_cleaned.tsv > merged_family.tsv

# Phylum (lines with "p__" but no "c__", "o__", "f__", "g__", "s__", or "t__")
awk -F'\t' 'NR==1 || ($1 ~ /p__/ && $1 !~ /c__/ && $1 !~ /o__/ && $1 !~ /f__/ && $1 !~ /g__/ && $1 !~ /s__/ && $1 !~ /t__/)' merged_abundance_table_cleaned.tsv > merged_phylum.tsv


#to execute the script
chmod +x split_metaphlan_levels.sh
bash split_metaphlan_levels.sh

#that generated 'merged_strain.tsv', 'merged_species.tsv', 'merged_genus.tsv', 'merged_family.tsv', and 'merged_phylum.tsv'













##install Metaphlan:
#upgraded Pip first
module spider scipy
module load scipy-stack/2021a
 python -c "import scipy; print(scipy.__version__)" #1.7.0
pip install --no-cache-dir metaphlan 
 metaphlan --version ##MetaPhlAn version 4.1.1 (11 Mar 2024)
